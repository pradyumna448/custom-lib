{"version":3,"file":"login-lib.mjs","sources":["../../../projects/login-lib/src/lib/login-lib.service.ts","../../../projects/login-lib/src/lib/login-lib.component.ts","../../../projects/login-lib/src/lib/login/login.component.ts","../../../projects/login-lib/src/lib/login/login.component.html","../../../projects/login-lib/src/lib/login-routing/login-routing.module.ts","../../../projects/login-lib/src/lib/login-lib.module.ts","../../../projects/login-lib/src/public-api.ts","../../../projects/login-lib/src/login-lib.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginLibService {\n  private environment='';\n  constructor(private http:HttpClient, @Inject('environment') environment:any) {\n    this.environment = environment;\n    console.log(environment);\n    \n   }\n\n  login(credentials: any) {\n    const hdrs = new HttpHeaders({ 'X-USER': credentials.username, 'X-PASS': credentials.password });\n    hdrs.append('Content-Type', 'application/text');\n    return this.http.post(this.environment['baseURL'] + 'ctld/api/session/v1',\n      JSON.stringify({ username: credentials.username, password: credentials.password }),\n      { headers: hdrs, observe: 'response' });\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-login-lib',\n  template: `\n   <router-outlet></router-outlet>\n  `,\n  styles: [\n  ]\n})\nexport class LoginLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { LoginLibService } from '../login-lib.service';\n\n@Component({\n  selector: 'lib-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  encapsulation: ViewEncapsulation.None, \n})\nexport class LoginComponent implements OnInit {\n  showLoader = false;\n  hide = false;\n  pageData: any;\n  baseUrl: any;\n  imageUrl: any;\n  constructor(private authService: LoginLibService, private router: Router,private matSnackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    console.log(\"INSIDE  LOGIN INIT\");\n    this.imageUrl = \"../../../assets/farmer.svg\"\n  }\n\n  loginUser(userCredentials: any) {\n    const loginModel = {\n      username: userCredentials.form.value.userName,\n      password: userCredentials.form.value.userPassword\n    }\n    console.log(loginModel);\n    this.authService.login(loginModel).subscribe({\n      next: (data: any) => {\n        console.log(data);\n        sessionStorage.setItem(\"session_id\", data.headers.get('X-SESSIONID'));\n        alert('Logged In Successfully');\n        // this.router.navigate(['home']);\n      },\n      error: (err) => {\n        this.matSnackBar.open(\"Failed to login\", \"Ok\", { duration: 30000 });\n      }\n    })\n  }\n\n}\n","<main class=\"container-fluid login-page\">\n    <div class=\"row \" style=\"height:100vh\">\n        <div class=\"left-side d-xl-flex  flex-column col-5 d-none p-0 login-image\" [ngStyle]=\"{\n            'background': (imageUrl) ? 'url(' + imageUrl + ')' : '' }\">\n            <div class=\"login-image-content\">\n                <!-- <hr class=\"yellow-line\"> -->\n                <!-- <h1 style=\"font-size: 2.5em;\">{{pageData?.header}}</h1> -->\n                <!-- <p>{{pageData?.appDetails}}</p> -->\n            </div>\n        </div>\n        <div class=\"right-side col-xl-7 col-md-12  d-flex  flex-column \" style=\"background:#fff\">\n            <article id=\"sign-in-section\" class=\"col-12\">\n                <section class=\"row justify-content-center mt-3 header\">\n\n                    <figure class=\"col-6 col-lg-3 col-md-4   \">\n                        <a class=\"university\"><img class=\"logo-urvi\" src=\"../../../assets/URVI_logo.png\"\n                                alt=\"commons.farm\"></a>\n                        <!-- <a class=\"university\"><img class=\"w-100 h-100\" src=\"http://localhost/login/assets/images/Commons.png\"\n                                    alt=\"University of commons\"></a> -->\n                    </figure>\n                </section>\n                <div class=\"row  form-container  justify-content-center align-items-center h-60  \">\n                    <form class=\"mt-5 col-md-10 justify-content-center\" (submit)=\"loginUser(loginForm)\"\n                        #loginForm=\"ngForm\">\n                        <div class=\"row justify-content-center\">\n                            <div class=\"mb-4 col-12 col-xl-8  col-md-12\">\n                                <div class=\"col-12  input-group \">\n                                    <div class=\"input-group-text bg-transparent p-0 input-border-right-icon\">\n                                        <!-- <img class=\"px-1 svgWidth\" src=\"http://localhost/login/assets/images/svg/envelope.svg\"> -->\n                                        <img class=\"px-1 svgWidth\" src=\"../../../assets/envelope.svg\">\n                                    </div>\n                                    <input type=\"text\" class=\"form-control  bg-transparent input-border-left-icon\"\n                                        #userName=\"ngModel\" name=\"userName\" placeholder=\"Enter username\"\n                                        aria-label=\"UserName\" ngModel required autocomplete=\"off\">\n                                </div>\n                                <div class=\"col-12 error-text \"><span\n                                        *ngIf=\"userName.invalid && userName.touched \">Username is a mandatory\n                                        field</span>\n                                </div>\n                            </div>\n                            <div class=\"w-100\"></div>\n                            <div class=\"mb-2 col-12 col-xl-8 col-md-12\">\n                                <div class=\"col-12  input-group \">\n                                    <div class=\"input-group-text bg-transparent input-border-right-icon\">\n                                        <!-- <img class=\"px-1 svgWidth\" src=\"http://localhost/login/assets/images/svg/lock.svg\"> -->\n                                        <img class=\"px-1 svgWidth\" src=\"../../../assets/lock.svg\">\n                                    </div>\n                                    <input type=\"password\" [type]=\"!hide ? 'password' : 'text'\" name=\"userPassword\"\n                                        ngModel required placeholder=\"Enter password\" #userPassword=\"ngModel\"\n                                        class=\"form-control bg-transparent input-border-right-icon\"\n                                        data-toggle=\"password\">\n                                    <span class=\"input-group-append\">\n                                        <div class=\"input-group-text bg-transparent input-border-left-icon\">\n                                            <span class=\"pass-show\" *ngIf=\"!hide\" [attr.aria-label]=\"'Show password'\"\n                                                (click)=\"hide = !hide\" [attr.aria-pressed]=\"hide\">\n                                                Show\n                                            </span>\n                                            <span class=\"pass-hide\" *ngIf=\"hide\" (click)=\"hide = !hide\"\n                                                [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"!hide\">\n                                                Hide\n                                            </span>\n                                        </div>\n                                    </span>\n                                </div>\n                                <div class=\" col-12  error-text \">\n                                    <span *ngIf=\"userPassword.invalid && userPassword.touched \">\n                                        Password is a mandatory field</span>\n                                </div>\n                            </div>\n                            <div class=\"sign-in col-11 col-xl-6 col-md-6 col-sm-10 pt-5\">\n                                <button class=\"inSign\" type=\"submit\" *ngIf=\"!showLoader\">Login</button>\n\n                                <div class=\"loadingIndicator mx-auto\" *ngIf=\"showLoader\">\n                                </div>\n                                <br>\n\n                            </div>\n                            <div class=\"w-100\"></div>\n\n                        </div>\n                    </form>\n                </div>\n            </article>\n        </div>\n    </div>\n</main>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from '../login/login.component';\n\nconst routes: Routes = [ { path: \"\", component: LoginComponent },];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { LoginLibComponent } from './login-lib.component';\nimport { LoginRoutingModule } from './login-routing/login-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    LoginLibComponent,\n    LoginComponent\n  ],\n  imports: [\n    LoginRoutingModule,\n    CommonModule,\n    LoginRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    MatSnackBarModule,\n    BrowserAnimationsModule\n  ],\n  exports: [\n    LoginLibComponent\n  ]\n})\nexport class LoginLibModule { }\n","/*\n * Public API Surface of login-lib\n */\n\nexport * from './lib/login-lib.service';\nexport * from './lib/login-lib.component';\nexport * from './lib/login-lib.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i1.LoginLibService"],"mappings":"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"}